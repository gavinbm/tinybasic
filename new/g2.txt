prog      ::= {stmnt}
stmnt     ::= "PRINT" (expr | string) nl
            | "IF" comp "THEN" nl {stmnt} "END" nl
            | "WHILE" comp "DO" nl {stmnt} "END" nl
            | "PROC" ident nl {stmnt} "RETURN" nl
            | "CALL" ident nl
            | "LABEL" ident nl
            | "GOTO" ident nl
            | "LET" ident "=" expr nl
            | "INPUT" ident nl
comp      ::= expr (("=" | "!" | ">" | "<") expr)+
expr      ::= term {( "-" | "+" ) term}
term      ::= unary {( "/" | "*" ) unary}
unary     ::= ["+" | "-"] primary
primary   ::= number | ident
nl        ::= '\n'+