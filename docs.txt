program ::= {statement}
statement ::= "PRINT" (expression | string) nl
            | "IF" comparison "THEN" nl {statement} "ENDIF" nl
            | "WHILE" comparison "REPEAT" nl {statement} "ENDWHILE" nl
            | "LABEL" ident nl
            | "GOTO" ident nl
            | "LET" ident "=" expression nl
            | "INPUT" ident nl
comparison ::= expression (("==" | "!=" | ">" | ">=" | "<" | "<=") expression)+
expression ::= term {( "-" | "+" ) term}
term ::= unary {( "/" | "*" ) unary}
unary ::= ["+" | "-"] primary
primary ::= number | ident
nl ::= '\n'+

type map:
    EOF = 1
    NEWLINE = 2
    NUMBER = 3
    IDENT = 4
    STRING = 5
    # Keywords.
    LABEL = 6
    GOTO = 7
    PRINT = 8
    INPUT = 9
    LET = 10
    IF = 11
    THEN = 12
    ENDIF = 13
    WHILE = 14
    REPEAT = 15
    ENDWHILE = 16
    # Operators.
    EQ = 17
    PLUS = 18
    MINUS = 19
    MUL = 20
    DIV = 21
    EQEQ = 22
    NOTEQ = 23
    LT = 24
    LTEQ = 25
    GT = 26
    GTEQ = 27

